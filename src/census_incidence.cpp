// [[Rcpp::depends(RcppArmadillo)]]
#include <RcppArmadillo.h>

using namespace arma;
using namespace Rcpp;

//' Construct a matrix containing the incidence counts at a sequence of census times.
//'
//' @param incid_mat matrix with incidence counts
//' @param census_times vector of census times
//' @param interval_inds interval indices, generated by a call to findInterval with left.open=T
//'
//' @return matrix containing the incidence counts at census times.
//' @export
// [[Rcpp::export]]
arma::mat census_incidence(const arma::mat& incid_mat, const arma::vec& census_times, const arma::uvec& interval_inds) {

        int n_times  = census_times.n_elem;
        int n_events = incid_mat.n_cols - 1;
        arma::uvec col_inds = Rcpp::as<arma::uvec>(Rcpp::wrap(Rcpp::seq(1,n_events)));
        arma::mat censusmat(n_times, incid_mat.n_cols, arma::fill::zeros);
        censusmat.col(0) = census_times;

        // get interval indices
        for(int k=0; k<n_times; ++k) {
                censusmat(k, arma::span(1, n_events)) =
                        arma::sum(incid_mat(arma::find(interval_inds==k), col_inds), 0);
        }

        return censusmat;
}

