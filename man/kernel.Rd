% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernel.R
\name{kernel}
\alias{kernel}
\title{Specify an MCMC transition kernel for updating the model parameters.}
\usage{
kernel(method, sigma, scale_constant = 0.5, scale_cooling = 0.5 + 1e-05,
  step_size = 1, max_scaling = Inf, target_g = 0.234, nugget = NULL,
  harss_warmup = 0, stop_adaptation = NULL, afss_setting_list = NULL,
  harss_setting_list = NULL, mvnss_setting_list = NULL, messages = TRUE)
}
\arguments{
\item{method}{algorithm to be used in generating parameter updates, see
details below.}

\item{sigma}{vector of variances or variance-covariance matrix for random walk
proposals, with names or rows and columns corresponding to the names of
parameters on their estimation scales.}

\item{scale_constant}{constant multiple of the adaptations determined by
\code{scale_cooling}.}

\item{scale_cooling}{rate at which to cool the adaptation, defaults to 0.5.
Adaptation contributions are governed by a harmonic sequence:
scale_constant/(iteration/step_size+1)^scale_cooling. The
\code{plot_adaptations} function may be used to plot the adaptation factors.}

\item{step_size}{adaptation increment for each iteration, defaults to 1.}

\item{max_scaling}{maximum scale factor, defaults to Inf.}

\item{target_g}{target acceptance rate for global Metropolis proposals.}

\item{nugget}{fixed nugget contribution, defaults 0.05 for afss, 0.01 for
mvn_g_adaptive, and 0.5 for mvnss (cooling controlled in mvnss_settings)}

\item{harss_warmup}{Number of hit-and-run warmup iterations, possibly
interleaved with elliptical slice sampling warmup updates if ess_warmup =
TRUE in the ess_settings list, performed prior to beginning the MCMC run.
Defaults to 0.}

\item{stop_adaptation}{iteration at which to stop adapting the proposal
distribution.}

\item{afss_setting_list}{list of settings for automated factor slice sampling
generated by the \code{afss_settings} function.}

\item{messages}{should messages be printed?}
}
\value{
list containing the method and covariance matrix for the MCMC kernel.
}
\description{
Model parameters can be updated either using either componentwise
 or global Metropolis, with options for global or componentwise adaptive
 scaling.
}
\details{
Specifies a Metropolis transition kernel wtih symmetric Gaussian
 proposals. The options for the method are as follows: 1) mvn_rw: global
 random walk, updating all parameters jointly. 2) mvn_g_adaptive: global
 adaptive Metropolis with global adaptive scaling (Alg. 4 in Andrieu and
 Thoms). 3) Automated factor slice sampler (modified adaptive version of the
 adaptation scheme in Tibbits, et al. 2014) with hit and run updates when not
 updating along all factor directions. 4) Hit-and-run slice sampler.

 References:

 Andrieu, Christophe, and Johannes Thoms. "A tutorial on adaptive MCMC."
 Statistics and Computing 18.4 (2008): 343-373.

 Matthew M. Tibbits, Chris Groendyke, Murali Haran & John C. Liechty
 "Automated Factor Slice Sampling." Journal of Computational and Graphical
 Statistics 23:2 (2014): 543-563.
}
